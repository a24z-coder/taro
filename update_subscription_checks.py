#!/usr/bin/env python3
import os
import re

def update_file(file_path):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª, –¥–æ–±–∞–≤–ª—è—è –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º —Ä–µ–∫–ª–∞–º—ã"""
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–º–ø–æ—Ä—Ç SubscriptionUtils
    if 'import \'package:tarot_ai/utils/subscription_utils.dart\';' not in content:
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        import_pattern = r'(import \'package:stack_appodeal_flutter/stack_appodeal_flutter\.dart\';)'
        replacement = r'\1\nimport \'package:tarot_ai/utils/subscription_utils.dart\';'
        content = re.sub(import_pattern, replacement, content)
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –±–ª–æ–∫–∏ —Å –ø–æ–∫–∞–∑–æ–º —Ä–µ–∫–ª–∞–º—ã –∏ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∏—Ö –≤ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
    # –ò—â–µ–º –±–ª–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ —Ä–µ–∫–ª–∞–º–µ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç Appodeal.show
    ad_pattern = r'(\s+)(// --- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º—É[^-]*---\s*\n\s*try\s*\{[^}]*Appodeal\.show\(AppodealAdType\.Interstitial\)[^}]*\}[^}]*catch\s*\([^}]*\)\s*\{[^}]*\})'
    
    def replace_ad_block(match):
        indent = match.group(1)
        ad_block = match.group(2)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
        new_block = f"""{indent}// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
{indent}if (SubscriptionUtils.shouldShowAds()) {{
{indent}  {ad_block}
{indent}}} else {{
{indent}  debugPrint('[{os.path.basename(file_path).replace('.dart', '')}] Skipping ad - user has active subscription');
{indent}}}"""
        
        return new_block
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—É
    new_content = re.sub(ad_pattern, replace_ad_block, content, flags=re.DOTALL)
    
    # –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if new_content != content:
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(new_content)
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {file_path}")
        return True
    else:
        print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π): {file_path}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    files_to_update = [
        'lib/screens/card_combination_screen.dart',
        'lib/screens/monthly_forecast_spread_screen.dart',
        'lib/screens/card_detail_screen.dart',
        'lib/screens/fun_spread_screen.dart',
        'lib/screens/chat_with_tarot_reader_screen.dart',
        'lib/screens/pros_cons_spread_screen.dart',
        'lib/screens/five_card_spread_screen.dart',
        'lib/screens/career_finance_spread_screen.dart',
        'lib/screens/celtic_cross_screen.dart',
        'lib/screens/self_development_balance_spread_screen.dart',
        'lib/screens/love_spread_screen.dart',
    ]
    
    updated_count = 0
    
    for file_path in files_to_update:
        if os.path.exists(file_path):
            if update_file(file_path):
                updated_count += 1
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {updated_count}")

if __name__ == "__main__":
    main() 